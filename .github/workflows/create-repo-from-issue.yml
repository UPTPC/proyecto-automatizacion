name: Create Repo from Issue
on:
  issues:
    types: [opened]

jobs:
  create-repo:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    steps:
      - name: Extract and sanitize project name
        id: extract
        run: |
          # Extraemos el nombre del issue
          title="${{ github.event.issue.title }}"
          
          # Reemplazamos los espacios por guiones y convertimos a minúsculas
          sanitized_name=$(echo "$title" | sed 's/Crear mi repositorio //g' | tr ' ' '-' | tr '[:upper:]' '[:lower:]')

          # Obtenemos el nombre de usuario en minúsculas
          user_login_lower=$(echo "${{ github.event.issue.user.login }}" | tr '[:upper:]' '[:lower:]')

          # Construimos el nombre final del repositorio
          repo_name="${user_login_lower}-${sanitized_name}"
          
          # Guardamos el nombre para usarlo en los siguientes pasos
          echo "repo_name=$repo_name" >> $GITHUB_ENV

      - name: Create repository
        if: startsWith(github.event.issue.title, 'Crear mi repositorio ')
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.REPO_CREATOR_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/UPTPC/repos \
            -d '{"name":"${{ env.repo_name }}","description":"Proyecto sociotecnológico de ${{ github.event.issue.user.login }}"}'

      - name: Comment on issue
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `¡Hola @${{ github.event.issue.user.login }}! Tu repositorio para el proyecto Sociotecnológico ha sido creado: https://github.com/UPTPC/${{ env.repo_name }}`
            })
