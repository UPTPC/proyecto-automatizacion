name: Create Repo from Issue
on:
  issues:
    types: [opened]

jobs:
  create-repo:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Para escribir en el repo, si es necesario
      issues: write # Para comentar en el issue
      repository: write # Necesario para crear un repo
    steps:
      - name: Extract project name
        id: extract
        run: |
          title="${{ github.event.issue.title }}"
          project_name=$(echo "$title" | sed 's/Crear mi repositorio //')
          echo "project_name=$project_name" >> $GITHUB_ENV

      - name: Create repository
        if: startsWith(github.event.issue.title, 'Crear mi repositorio ')
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.REPO_CREATOR_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/UPTPC/repos \
            -d '{"name":"${{ env.project_name }}","description":"Proyecto sociotecnológico de ${{ github.event.issue.user.login }}"}'

      - name: Add collaborators
        # Este paso sería más complejo para asignar permisos, pero es posible.
        # Por ahora, la API de creación de repos ya podría asignar al creador.
        run: echo "Repository created. Now add collaborators."

      - name: Comment on issue
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `¡Hola @${{ github.event.issue.user.login }}! Tu repositorio para el proyecto Sociotecnológico ha sido creado: https://github.com/UPTPC/${{ env.project_name }}`
            })
